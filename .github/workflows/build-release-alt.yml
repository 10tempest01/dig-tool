name: Build and Release with PyInstaller

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag (e.g., v1.0-beta)'
        required: true
        default: 'v1.0-beta'
      release_name:
        description: 'Release name'
        required: true
        default: 'Beta Release v1.0'
      is_beta_release:
        description: 'Mark as beta release'
        required: false
        default: true
        type: boolean
      custom_notes:
        description: 'Additional release notes (optional)'
        required: false
        default: ''

jobs:
  build-and-release:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - name: Check-out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  
          
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          architecture: 'x64'
          cache: 'pip'
          
      - name: Install Dependencies
        run: |
          pip install opencv-python numpy Pillow keyboard pywin32 pynput requests pyautoit pyinstaller ahk
          
      - name: Build Executable with PyInstaller
        run: |
          pyinstaller --onefile --windowed --name=DigTool-1.5beta --icon=assets/icon.ico --add-data="assets;assets" --add-data="core;core" --add-data="interface;interface" --add-data="utils;utils" --add-binary="assets/AutoHotkey64.exe;."  --collect-all=ahk --hidden-import=ahk --collect-all=autoit --distpath=dist --workpath=build --specpath=. --clean main.py
          
      - name: Get executable info
        id: get_exe_info
        run: |
          $exeName = (Get-ChildItem -Path "dist" -Filter "*.exe" | Select-Object -First 1).Name
          $exePath = "dist/$exeName"
          $fileSize = [math]::Round((Get-Item $exePath).Length / 1MB, 2)
         
          echo "exe_name=$exeName" >> $env:GITHUB_OUTPUT
          echo "exe_path=$exePath" >> $env:GITHUB_OUTPUT
          echo "file_size=$fileSize" >> $env:GITHUB_OUTPUT
        shell: powershell
        
      - name: Generate automated release notes
        id: generate_notes
        run: |
          $notes = ""
         
          if ("${{ github.event.inputs.is_beta_release }}" -eq "true") {
            $notes += "**BETA-RELEASE**`n`n"
          }
         
          $customNotes = "${{ github.event.inputs.custom_notes }}"
          if ($customNotes -and $customNotes.Trim() -ne "") {
            $notes += "**Additional Notes:**`n$customNotes`n`n"
          }
         
          if ("${{ github.event.inputs.is_beta_release }}" -eq "true") {
            $notes += "This is a beta release - Please report any issues within the [discord](https://discord.com/invite/mxE7dzXMGf)."
          }
         
          echo "release_notes<<EOF" >> $env:GITHUB_OUTPUT
          echo "$notes" >> $env:GITHUB_OUTPUT
          echo "EOF" >> $env:GITHUB_OUTPUT
        shell: powershell
        
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.release_tag }}
          name: ${{ github.event.inputs.release_name }}
          body: ${{ steps.generate_notes.outputs.release_notes }}
          draft: false
          prerelease: ${{ github.event.inputs.is_beta_release }}
          files: ${{ steps.get_exe_info.outputs.exe_path }}
          
      - name: Output release info
        run: |
          echo "Release created successfully!"
          echo "Tag: ${{ github.event.inputs.release_tag }}"
          echo "Asset: ${{ steps.get_exe_info.outputs.exe_name }}"
        shell: powershell