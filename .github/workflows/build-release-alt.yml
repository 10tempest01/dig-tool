name: Build and Release with PyInstaller

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'v1.0'
        required: true
        default: 'v1.0'
      release_name:
        description: 'Release name'
        required: true
        default: 'DigTool Release v1.0'
      release_notes:
        description: 'Release notes'
        required: false
        default: 'compiled with PyInstaller'

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          architecture: 'x64'
          cache: 'pip'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install opencv-python numpy Pillow keyboard pywin32 pynput requests pyautoit pyinstaller

      - name: Verify Directory Structure
        run: |
          echo "Checking project structure..."
          if (Test-Path "assets") { echo "‚úì assets directory found" } else { echo "‚úó assets directory missing" }
          if (Test-Path "core") { echo "‚úì core directory found" } else { echo "‚úó core directory missing" }
          if (Test-Path "interface") { echo "‚úì interface directory found" } else { echo "‚úó interface directory missing" }
          if (Test-Path "utils") { echo "‚úì utils directory found" } else { echo "‚úó utils directory missing" }
          if (Test-Path "main.py") { echo "‚úì main.py found" } else { echo "‚úó main.py missing" }
          if (Test-Path "assets/icon.ico") { echo "‚úì icon.ico found" } else { echo "‚úó icon.ico missing" }
        shell: powershell

      - name: Build Executable with PyInstaller
        run: |
          echo "Building DigTool executable..."
          pyinstaller --onefile --windowed --name=DigTool --icon=assets/icon.ico --add-data="assets;assets" --add-data="core;core" --add-data="interface;interface" --add-data="utils;utils" --collect-all=autoit --distpath=dist --workpath=build --specpath=. --clean main.py

      - name: Verify Build Output
        run: |
          echo "Checking build output..."
          if (Test-Path "dist") { 
            echo "‚úì dist directory created"
            Get-ChildItem -Path "dist" -Recurse | ForEach-Object { echo "Found: $($_.FullName)" }
          } else { 
            echo "‚úó dist directory missing"
            exit 1
          }
        shell: powershell

      - name: Get executable info
        id: get_exe_info
        run: |
          $exeFile = Get-ChildItem -Path "dist" -Filter "*.exe" | Select-Object -First 1
          if ($exeFile) {
            $exeName = $exeFile.Name
            $exePath = "dist/$exeName"
            $exeSize = [math]::Round($exeFile.Length / 1MB, 2)
            echo "exe_name=$exeName" >> $env:GITHUB_OUTPUT
            echo "exe_path=$exePath" >> $env:GITHUB_OUTPUT
            echo "exe_size=$exeSize MB" >> $env:GITHUB_OUTPUT
            echo "‚úì Executable found: $exeName ($exeSize MB)"
          } else {
            echo "‚úó No executable found in dist directory"
            exit 1
          }
        shell: powershell

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.release_tag }}
          release_name: ${{ github.event.inputs.release_name }}
          body: |
            ${{ github.event.inputs.release_notes }}
            
            **Build Information:**
            - Build Date: 2025-06-29
            - Python Version: 3.11
            - Platform: Windows x64
            - Executable Size: ${{ steps.get_exe_info.outputs.exe_size }}
            
            **Included Features:**
            - Core detection engine
            - Advanced prediction system
            - Auto-walking capabilities
            - Auto-selling functionality
            - Discord notifications
            - Game overlay
            - Debug tools
            
            **Requirements:**
            - Windows 10/11
            - Display scaling set to 100%
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.get_exe_info.outputs.exe_path }}
          asset_name: ${{ steps.get_exe_info.outputs.exe_name }}
          asset_content_type: application/octet-stream

      - name: Build Summary
        run: |
          echo "üöÄ Build completed successfully!"
          echo "üì¶ Executable: ${{ steps.get_exe_info.outputs.exe_name }}"
          echo "üìè Size: ${{ steps.get_exe_info.outputs.exe_size }}"
          echo "üîó Release: ${{ github.event.inputs.release_tag }}"
        shell: powershell